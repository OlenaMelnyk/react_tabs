{"version":3,"sources":["components/Tabs/Tabs.jsx","App.js","index.js"],"names":["Tabs","tabs","selectedTabId","id","onTabSelected","className","map","tab","index","type","key","onClick","onKeyUp","title","value","find","content","readOnly","defaultProps","App","state","selectedTab","tabSelected","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0NAKaA,G,MAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,qBAAT,MAAyBD,EAAK,GAAGE,GAAjC,EAAqCC,EAArC,EAAqCA,cAArC,OAClB,6BACE,yBAAKC,UAAU,QACZJ,EAAKK,KAAI,SAACC,EAAKC,GAAN,OACR,4BACEC,KAAK,SACLC,IAAKH,EAAIJ,GACTE,UAAS,cACNE,EAAIJ,KAAOD,EACR,WACA,IACNS,QAAS,WACPP,EAAcG,EAAIJ,KAEpBS,QAAS,WACPR,EAAcG,EAAIJ,MAGnBI,EAAIM,WAIX,8BACEC,MAAOb,EAAKc,MAAK,SAAAR,GAAG,OAAIA,EAAIJ,KAAOD,KAAec,QAClDX,UAAU,UACVY,UAAQ,OAiBdjB,EAAKkB,aAAe,CAClBhB,cAAe,G,UC3CXD,EAAO,CACX,CAAEE,GAAI,QAASU,MAAO,QAASG,QAAS,eACxC,CAAEb,GAAI,QAASU,MAAO,QAASG,QAAS,eACxC,CAAEb,GAAI,QAASU,MAAO,QAASG,QAAS,gBA+B3BG,E,4MA1BbC,MAAQ,CACNC,YAAapB,EAAK,I,EAGpBqB,YAAc,SAACnB,GACb,EAAKoB,SAAS,CACZF,YAAapB,EAAKc,MAAK,SAAAR,GAAG,OAAIA,EAAIJ,KAAOA,Q,4CAI7C,WAAU,IACAkB,EAAgBG,KAAKJ,MAArBC,YAER,OACE,yBAAKhB,UAAU,OACb,sDAAwBgB,EAAYR,QACpC,kBAAC,EAAD,CACEZ,KAAMA,EACNC,cAAemB,EAAYlB,GAC3BC,cAAeoB,KAAKF,mB,GApBZG,IAAMC,WCRxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3ca6cfdb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './tabs.scss';\n\nexport const Tabs = ({ tabs, selectedTabId = tabs[0].id, onTabSelected }) => (\n  <div>\n    <div className=\"tabs\">\n      {tabs.map((tab, index) => (\n        <button\n          type=\"button\"\n          key={tab.id}\n          className={`tab ${\n            (tab.id === selectedTabId)\n              ? 'selected'\n              : ''}`}\n          onClick={() => {\n            onTabSelected(tab.id);\n          }}\n          onKeyUp={() => {\n            onTabSelected(tab.id);\n          }}\n        >\n          {tab.title}\n        </button>\n      ))}\n    </div>\n    <textarea\n      value={tabs.find(tab => tab.id === selectedTabId).content}\n      className=\"content\"\n      readOnly\n    />\n  </div>\n);\n\nconst TabType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n});\n\nTabs.propTypes = {\n  tabs: PropTypes.arrayOf(TabType).isRequired,\n  selectedTabId: PropTypes.string,\n  onTabSelected: PropTypes.func.isRequired,\n};\n\nTabs.defaultProps = {\n  selectedTabId: 0,\n};\n","import React from 'react';\nimport { Tabs } from './components/Tabs';\nimport './App.scss';\n\n/* eslint-disable */\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n/* eslint-enable */\n\nclass App extends React.Component {\n  state = {\n    selectedTab: tabs[0],\n  }\n\n  tabSelected = (id) => {\n    this.setState({\n      selectedTab: tabs.find(tab => tab.id === id),\n    });\n  }\n\n  render() {\n    const { selectedTab } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{`Selected tab is ${selectedTab.title}`}</h1>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={selectedTab.id}\n          onTabSelected={this.tabSelected}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}